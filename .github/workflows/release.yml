name: Release

on: [push]

jobs:
  Linux:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up Python 3.7
        uses: actions/setup-python@v1
        with:
          python-version: 3.7
      - name: Set up Poetry
        run: |
          python -m pip install --upgrade pip
          pip install poetry
          poetry install
      - name: Build project
        id: build
        run: |
          make build
          echo "::set-output name=filename::$(ls dist)"
          echo "::set-output name=version::$(make version)"
        shell: bash
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.build.outputs.version }}
          release_name: Version ${{ steps.build.outputs.version }}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/${{ steps.build.outputs.filename }}
          asset_name: ${{ steps.build.outputs.filename }}
          asset_content_type: application/octet-stream

  MacOS:
    runs-on: macos-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up Python 3.7
        uses: actions/setup-python@v1
        with:
          python-version: 3.7
      - name: Set up Poetry
        run: |
          python -m pip install --upgrade pip
          pip install poetry
          poetry install
      - name: Build project
        id: build
        run: |
          make build
          echo "::set-output name=filename::$(ls dist)"
          echo "::set-output name=version::$(make version)"
        shell: bash
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.build.outputs.version }}
          release_name: Version ${{ steps.build.outputs.version }}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/${{ steps.build.outputs.filename }}
          asset_name: ${{ steps.build.outputs.filename }}
          asset_content_type: application/octet-stream

  Windows:
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up Python 3.7
        uses: actions/setup-python@v1
        with:
          python-version: 3.7
      - name: Set up Poetry
        run: |
          python -m pip install --upgrade pip
          pip install poetry
          poetry install
      - name: Build project
        id: build
        run: |
          make build
          echo "::set-output name=filename::$((Get-ChildItem -Path "./dist" | Select-Object -First 1).Name)"
          echo "::set-output name=version::$(make version)"
        shell: pwsh
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.build.outputs.version }}
          release_name: Version ${{ steps.build.outputs.version }}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/${{ steps.build.outputs.filename }}
          asset_name: ${{ steps.build.outputs.filename }}
          asset_content_type: application/octet-stream
